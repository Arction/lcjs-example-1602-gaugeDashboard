(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,s)=>{const a=s(377),{lightningChart:n,Themes:o,AxisScrollStrategies:r,AxisTickStrategies:i,emptyFill:l,emptyLine:d}=a,c=document.getElementById("chart")||document.body;c===document.body&&(c.style.width="100vw",c.style.height="100vh",c.style.margin="0px"),c.style.display="flex",c.style.flexDirection="row";const h=document.createElement("div");c.append(h),h.style.width="25%",h.style.height="100%";const m=document.createElement("div");c.append(m),m.style.width="75%",m.style.height="100%";const u=n({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}),g=[],p=[],y=u.ChartXY({container:m,theme:o[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("").setCursor((e=>e.setTickMarkerXVisible(!1)));y.getDefaultAxisX().setTickStrategy(i.Empty).setThickness(0).setStrokeStyle(d).setScrollStrategy(r.progressive).setInterval({start:0,end:1e4,stopAxisAfter:!1}),y.getDefaultAxisY().dispose();for(let e=0;e<4;e++){const t=y.addAxisY({iStack:4-e}).setMargins(10,10).setInterval({start:0,end:100}),s=y.addPointLineAreaSeries({axisY:t,dataPattern:"ProgressiveX"}).setMaxSampleCount(1e4).setAreaFillStyle(l);p.push(s);const a=document.createElement("div");h.append(a),a.style.height="25%";const n=u.Gauge({container:a,theme:o[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("").setUnitLabel(`Channel ${e+1}`).setInterval(0,100).setAngleInterval(180,0).setRoundedEdges(!1).setBarThickness(20).setNeedleLength(20).setNeedleThickness(5).setValueIndicatorThickness(10).setGapBetweenBarAndValueIndicators(1).setTickFormatter((e=>e.toFixed(0))).setValueLabelFont((e=>e.setSize(24))).setUnitLabelFont((e=>e.setSize(16))).setTickFont((e=>e.setSize(16)));g.push(n)}const k=[],w=g[0].getTheme().examples.badGoodColorPalette,S=100/w.length;w.forEach(((e,t)=>{k.push({start:0+S*t,end:0+S*(t+1),color:e})})),g.forEach((e=>e.setValueIndicators(k)));const x=p.map((e=>100*Math.random()));setInterval((()=>{const e=performance.now();for(let t=0;t<4;t++){const s=x[t],a=Math.max(Math.min(s+5*(2*Math.random()-1),100),0);x[t]=a,p[t].add({x:e,y:a}),g[t].setValue(a)}}),1e3/60)}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);